Miguel Alvarez and Fabricio Rua


Eve Intercepting for Diffie Hellman:

We started by identifying our G and P variables. In this case G was equal to 17 and P was equal to 61.

Our next step was to set up our equations to find the secret number of Alice and Bob. For Alice (secret number X) we had the equation 46 = (G^X)modP and we substituted in our values to make the equation into: 46 = (17^X)mod 61. Then we did the same process for Bob, giving us an equation of: 5 = (17^Y)mod61.

With these two equations, we are able to isolate the secret numbers of Alice and Bob, X and Y respectively. We started by looking for Alice’s secret number using brute force in a unix terminal. We started with X = 2 and increment by 1 until we had a remainder of 46 for (17^X)mod 61. This remainder occurred at X = 14.

We could use X = 14 along with this equation (B^X)modP which would give us the shared secret for Alice. When we substituted our values we got (5^14)mod61 = 12.This is the shared secret between Alice and Bob.

In order to double check the solution, we did the same brute force process for Bob’s secret number. The secret number was Y = 26. We then used this secret number with the equation (A^Y)modP to find the shared secret which also came out to 12.

Our process uses a brute force that checks each possible number for X and Y. This means that for any secret number N, the brute force method must check all numbers from 0 to N until N is found. For larger numbers, this process would take larger amounts of time which would make the decryption process slower. Theoretically, if the number was large enough the computation could last as long as the heat death of the universe, which would not be useful for our purposes.



Eve intercepted for RSA:

We started by dissecting values from the public key that was shared by Bob. The public key is (31,4661) which gives us E = 31 and N = 4661. We know from these values that the two prime numbers P and Q will be greater than E and the product of P and Q will be equal to N. We started by using a brute force method, multiplying pairs of prime numbers greater than 31 to see which pair was equal to 4661. We found that the pair was 59 and 79. This means that P = 59 and Q=79.

Now that we have the prime numbers, P and Q, we can start trying to find Bob’s private key D. We use the equation (E*D)mod((P-1)(Q-1)) = 1 and substituted in our values to get (31*D)mod4524 = 1. Initially we looked at the number 4525 since 4525mod4524 = 1. This would give us a value of 145.967742 which is not an integer and so can not be Bob’s private key. Since 145.967742  is about 146 we decided to see what remainder we would get if we set D = 146. When D is 146 we get a remainder of 2. When incrementing D by 146 we noticed that the remainder would increase by 2 each time. Since our goal was to get a remainder of 1, we would want to increase this remainder to be 32 since 32-31 = 1. We noted that 146 would give us a remainder of 2 and so to get from 2 to 32 we need to add 30 to our remainder which would take 15 increments. That means D would be equal to 16*146 which is 2336. When we use D =2336 in our formula we get a remainder of 32, which means we would need to decrement D by 1. This would give us a final value for D = 2335, which indeed gives us a remainder of 1 in the formula (31*D)mod4524. 

Now that we had Bob’s private key we could use it to decrypt the encrypted data sent from Alice using the equation (Y^D)modN, where Y is each integer in Alice’s cypher text. We made a python program that took each integer in Alice’s cypher text and ran it through the formula to give us the original ASCII value. After composing  a list of the true values, the program then creates a string and goes through each value to get the character associated with it . The completed string will give us the secret message which is: 

Dear Bob, Check this out.  https://www.schneier.com/blog/archives/2017/12/e-mail_tracking_1.html Yikes! Your friend, Alice

If the integers involved were larger numbers then our process would have failed when trying to find a pair of prime numbers P and Q whose product is equal to N. Since a brute force method was used for this approach, when dealing with larger integers this process would take a very long time making our approach inefficient to the extent where it may never terminate in our lifetime.




